{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Untitled1.ipynb","version":"0.3.2","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"metadata":{"id":"SC7JtUVcPP6Y","colab_type":"text"},"cell_type":"markdown","source":[""]},{"metadata":{"id":"mQXcAp-AQxW7","colab_type":"code","colab":{}},"cell_type":"code","source":["\n","# google colab does not come with torch installed. And also, in course we are using torch 0.4. \n","# so following snippet of code installs the relevant version\n","\n","from os.path import exists\n","from wheel.pep425tags import get_abbr_impl, get_impl_ver, get_abi_tag\n","platform = '{}{}-{}'.format(get_abbr_impl(), get_impl_ver(), get_abi_tag())\n","cuda_output = !ldconfig -p|grep cudart.so|sed -e 's/.*\\.\\([0-9]*\\)\\.\\([0-9]*\\)$/cu\\1\\2/'\n","accelerator = cuda_output[0] if exists('/dev/nvidia0') else 'cpu'\n","\n","!pip install -q http://download.pytorch.org/whl/{accelerator}/torch-0.4.1-{platform}-linux_x86_64.whl torchvision\n","import torch"],"execution_count":0,"outputs":[]},{"metadata":{"id":"RmJBq19XPQN4","colab_type":"code","outputId":"77bdda0b-2caa-4edb-9621-4a43644fcc7b","executionInfo":{"status":"ok","timestamp":1547034916632,"user_tz":-330,"elapsed":1266,"user":{"displayName":"Neeraj Rajpurohit","photoUrl":"https://lh3.googleusercontent.com/-qkWmiP39Xtc/AAAAAAAAAAI/AAAAAAAAAqI/pEaomTJKuKo/s64/photo.jpg","userId":"01030622406410493851"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["# we will verify that GPU is enabled for this notebook\n","# following should print: CUDA is available!  Training on GPU ...\n","# \n","# if it prints otherwise, then you need to enable GPU: \n","# from Menu > Runtime > Change Runtime Type > Hardware Accelerator > GPU\n","\n","import torch\n","import numpy as np\n","\n","# check if CUDA is available\n","train_on_gpu = torch.cuda.is_available()\n","#print(train_on_gpu)\n","\n","if not train_on_gpu:\n","    print('CUDA is not available.  Training on CPU ...')\n","else:\n","    print('CUDA is available!  Training on GPU ...')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["CUDA is available!  Training on GPU ...\n"],"name":"stdout"}]},{"metadata":{"id":"la-Oo7zORe7s","colab_type":"code","outputId":"7b75a456-b89c-455f-9a3e-bc6d6710fdf3","executionInfo":{"status":"ok","timestamp":1547034888563,"user_tz":-330,"elapsed":6606,"user":{"displayName":"Neeraj Rajpurohit","photoUrl":"https://lh3.googleusercontent.com/-qkWmiP39Xtc/AAAAAAAAAAI/AAAAAAAAAqI/pEaomTJKuKo/s64/photo.jpg","userId":"01030622406410493851"}},"colab":{"base_uri":"https://localhost:8080/","height":173}},"cell_type":"code","source":["!pip install pillow==5.3.0\n","%reload_ext autoreload\n","%autoreload\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Collecting pillow==5.3.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/62/94/5430ebaa83f91cc7a9f687ff5238e26164a779cca2ef9903232268b0a318/Pillow-5.3.0-cp36-cp36m-manylinux1_x86_64.whl (2.0MB)\n","\u001b[K    100% |████████████████████████████████| 2.0MB 14.4MB/s \n","\u001b[?25hInstalling collected packages: pillow\n","  Found existing installation: Pillow 5.4.1\n","    Uninstalling Pillow-5.4.1:\n","      Successfully uninstalled Pillow-5.4.1\n","Successfully installed pillow-5.3.0\n"],"name":"stdout"}]},{"metadata":{"id":"u1q07XzmRiIy","colab_type":"code","colab":{}},"cell_type":"code","source":["# Imports here\n","from torch import nn,optim\n","import numpy as np\n","import torch.nn.functional as F\n","from torchvision import datasets, transforms, models\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"mTYRbUc4SDmV","colab_type":"code","outputId":"ed1370e3-ced3-4bff-951b-afa5bfdda2f1","executionInfo":{"status":"ok","timestamp":1547034926997,"user_tz":-330,"elapsed":1122,"user":{"displayName":"Neeraj Rajpurohit","photoUrl":"https://lh3.googleusercontent.com/-qkWmiP39Xtc/AAAAAAAAAAI/AAAAAAAAAqI/pEaomTJKuKo/s64/photo.jpg","userId":"01030622406410493851"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n","data_dir = \"/content/drive/My Drive/fdata2/flower_data\"\n","train_dir = data_dir + '/train'\n","valid_dir = data_dir + '/valid'\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"metadata":{"id":"AGGfAMOdV0ad","colab_type":"code","colab":{}},"cell_type":"code","source":["\n","\n","\n","### Mount Google drive\n","# from google.colab import drive\n","# drive.mount('/content/drive')\n","\n","# TODO: Define transforms for the training data and testing data\n","train_transforms = transforms.Compose([transforms.RandomRotation(30),\n","                                       transforms.RandomHorizontalFlip(),\n","                                       transforms.RandomResizedCrop(224),\n","                                       transforms.ToTensor(),\n","                                       transforms.Normalize([0.485, 0.456, 0.406],\n","                                                            [0.229, 0.224, 0.225])])\n","\n","test_transforms = transforms.Compose([transforms.Resize(255),\n","                                      transforms.CenterCrop(224),\n","                                      transforms.ToTensor(),\n","                                      transforms.Normalize([0.485, 0.456, 0.406],\n","                                                           [0.229, 0.224, 0.225])])\n","\n","# Pass transforms in here, then run the next cell to see how the transforms look\n","train_data = datasets.ImageFolder(train_dir , transform=train_transforms)\n","test_data = datasets.ImageFolder(valid_dir, transform=test_transforms)\n","\n","trainloader = torch.utils.data.DataLoader(train_data, batch_size=32, shuffle=True)\n","validloader = torch.utils.data.DataLoader(test_data, batch_size=32, shuffle = True)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"5cQ69ZSEWJj7","colab_type":"code","colab":{}},"cell_type":"code","source":["import json\n","\n","with open('/content/drive/My Drive/cat_to_name.json', 'r') as f:\n","    cat_to_name = json.load(f)\n","    "],"execution_count":0,"outputs":[]},{"metadata":{"id":"dgnNIHa8Xk1r","colab_type":"code","colab":{}},"cell_type":"code","source":["model = models.resnet152(pretrained=True)\n","\n","for param in model.parameters():\n","  param.requires_grad = False\n","\n","num_ftrs = model.fc.in_features\n","# print(num_ftrs)\n","model.fc = nn.Sequential(nn.Linear(num_ftrs, 102),\n","                         nn.LogSoftmax(dim=1))\n","\n","\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"JoHFHBBETkjg","colab_type":"code","outputId":"680ed4c2-77d4-4669-8c8d-545698341552","executionInfo":{"status":"ok","timestamp":1547034950944,"user_tz":-330,"elapsed":4331,"user":{"displayName":"Neeraj Rajpurohit","photoUrl":"https://lh3.googleusercontent.com/-qkWmiP39Xtc/AAAAAAAAAAI/AAAAAAAAAqI/pEaomTJKuKo/s64/photo.jpg","userId":"01030622406410493851"}},"colab":{"base_uri":"https://localhost:8080/","height":8262}},"cell_type":"code","source":["device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","model.to(device)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ResNet(\n","  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n","  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","  (relu): ReLU(inplace)\n","  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n","  (layer1): Sequential(\n","    (0): Bottleneck(\n","      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","      (downsample): Sequential(\n","        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): Bottleneck(\n","      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (2): Bottleneck(\n","      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","  )\n","  (layer2): Sequential(\n","    (0): Bottleneck(\n","      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","      (downsample): Sequential(\n","        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (2): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (3): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (4): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (5): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (6): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (7): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","  )\n","  (layer3): Sequential(\n","    (0): Bottleneck(\n","      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","      (downsample): Sequential(\n","        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (2): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (3): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (4): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (5): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (6): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (7): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (8): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (9): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (10): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (11): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (12): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (13): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (14): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (15): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (16): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (17): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (18): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (19): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (20): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (21): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (22): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (23): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (24): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (25): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (26): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (27): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (28): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (29): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (30): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (31): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (32): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (33): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (34): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (35): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","  )\n","  (layer4): Sequential(\n","    (0): Bottleneck(\n","      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","      (downsample): Sequential(\n","        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): Bottleneck(\n","      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (2): Bottleneck(\n","      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","  )\n","  (avgpool): AvgPool2d(kernel_size=7, stride=1, padding=0)\n","  (fc): Sequential(\n","    (0): Linear(in_features=2048, out_features=102, bias=True)\n","    (1): LogSoftmax()\n","  )\n",")"]},"metadata":{"tags":[]},"execution_count":7}]},{"metadata":{"id":"rMntsBtMlm9E","colab_type":"code","colab":{}},"cell_type":"code","source":["import torch.optim as optim\n","\n","# specify loss function\n","criterion = nn.NLLLoss()\n","\n","# specify optimizer\n","optimizer = optim.Adam(model.fc.parameters(), lr = 0.001)\n","\n","#scheduler = optim.lr_scheduler.ReduceLROnPlateau(optimizer, 'min')\n","scheduler = optim.lr_scheduler.StepLR(optimizer, step_size=5, gamma=0.1)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"AuEBntq8IBel","colab_type":"code","outputId":"409a423a-9952-410b-a2f4-8b4545e52494","executionInfo":{"status":"ok","timestamp":1547045468759,"user_tz":-330,"elapsed":10509297,"user":{"displayName":"Neeraj Rajpurohit","photoUrl":"https://lh3.googleusercontent.com/-qkWmiP39Xtc/AAAAAAAAAAI/AAAAAAAAAqI/pEaomTJKuKo/s64/photo.jpg","userId":"01030622406410493851"}},"colab":{"base_uri":"https://localhost:8080/","height":13515}},"cell_type":"code","source":["print('stbart')\n","n_epochs = 30\n","valid_loss_min = np.inf\n","\n","for epoch in range(1, n_epochs+1):\n","  \n","  train_loss = 0\n","  valid_loss = 0\n","  accuracy = 0\n","  scheduler.step()\n","  ###############\n","  #### train ####\n","  ###############\n","  \n","  \n","  model.train()\n","  \n","  print('pos1')\n","  i = 0\n","  print(len(trainloader))\n","  print(len(validloader))\n","  for idx, (data, label) in enumerate(trainloader):\n","    \n","    if torch.cuda.is_available():\n","      data, label = data.to('cuda'), label.to('cuda')\n","    #print('pos2')\n","    optimizer.zero_grad()\n","    output = model(data)\n","    loss = criterion(output, label)\n","    loss.backward()\n","    optimizer.step()\n","    train_loss += loss.item()\n","    i += 1\n","    if i%10 == 1:\n","      print('i',i)\n","    \n","  ###############\n","  ## validate ###\n","  ###############\n","  print('hwt')\n","  model.eval()\n","  for idx, (data, label) in enumerate(validloader):\n","    if torch.cuda.is_available():\n","      data, label = data.to('cuda'), label.to('cuda')\n","    output = model(data)\n","    loss = criterion(output, label)\n","    valid_loss += loss.item()\n","    ps = torch.exp(output)\n","    top_p, top_class = ps.topk(1, dim=1)\n","    equals = top_class == label.view(*top_class.shape)\n","    accuracy += torch.mean(equals.type(torch.FloatTensor)).item()\n","  train_loss = train_loss/len(trainloader)\n","  valid_loss = valid_loss/len(validloader)\n","  \n","  \n","  print('Epoch: {} \\tTraining Loss: {:.6f} \\tValidation Loss: {:.6f} \\tAccuracy: {:.6f}'.format(\n","        epoch, train_loss, valid_loss, accuracy/len(validloader)))\n","\n","  # save model if validation loss has decreased\n","  if valid_loss <= valid_loss_min:\n","      print('Validation loss decreased ({:.6f} --> {:.6f}).  Saving model ...'.format(\n","      valid_loss_min,\n","      valid_loss))\n","      torch.save(model.state_dict(), F\"/content/drive/My Drive/classifierPlateauxyz.pt\")\n","      valid_loss_min = valid_loss\n","  "],"execution_count":0,"outputs":[{"output_type":"stream","text":["stbart\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 1 \tTraining Loss: 2.379409 \tValidation Loss: 0.763052 \tAccuracy: 0.858040\n","Validation loss decreased (inf --> 0.763052).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 2 \tTraining Loss: 0.906551 \tValidation Loss: 0.457302 \tAccuracy: 0.903446\n","Validation loss decreased (0.763052 --> 0.457302).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 3 \tTraining Loss: 0.635912 \tValidation Loss: 0.308439 \tAccuracy: 0.936298\n","Validation loss decreased (0.457302 --> 0.308439).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 4 \tTraining Loss: 0.522922 \tValidation Loss: 0.296557 \tAccuracy: 0.926282\n","Validation loss decreased (0.308439 --> 0.296557).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 5 \tTraining Loss: 0.477611 \tValidation Loss: 0.242777 \tAccuracy: 0.945246\n","Validation loss decreased (0.296557 --> 0.242777).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 6 \tTraining Loss: 0.370923 \tValidation Loss: 0.204687 \tAccuracy: 0.957933\n","Validation loss decreased (0.242777 --> 0.204687).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 7 \tTraining Loss: 0.341960 \tValidation Loss: 0.204009 \tAccuracy: 0.953392\n","Validation loss decreased (0.204687 --> 0.204009).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 8 \tTraining Loss: 0.348576 \tValidation Loss: 0.218592 \tAccuracy: 0.948851\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 9 \tTraining Loss: 0.345990 \tValidation Loss: 0.205383 \tAccuracy: 0.953392\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 10 \tTraining Loss: 0.346786 \tValidation Loss: 0.203184 \tAccuracy: 0.955796\n","Validation loss decreased (0.204009 --> 0.203184).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 11 \tTraining Loss: 0.340207 \tValidation Loss: 0.202852 \tAccuracy: 0.954594\n","Validation loss decreased (0.203184 --> 0.202852).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 12 \tTraining Loss: 0.343592 \tValidation Loss: 0.195759 \tAccuracy: 0.959135\n","Validation loss decreased (0.202852 --> 0.195759).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 13 \tTraining Loss: 0.334051 \tValidation Loss: 0.190991 \tAccuracy: 0.957933\n","Validation loss decreased (0.195759 --> 0.190991).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 14 \tTraining Loss: 0.336522 \tValidation Loss: 0.192769 \tAccuracy: 0.956731\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 15 \tTraining Loss: 0.322118 \tValidation Loss: 0.194072 \tAccuracy: 0.955796\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 16 \tTraining Loss: 0.344048 \tValidation Loss: 0.196579 \tAccuracy: 0.960604\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 17 \tTraining Loss: 0.335461 \tValidation Loss: 0.197288 \tAccuracy: 0.960604\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 18 \tTraining Loss: 0.335002 \tValidation Loss: 0.196801 \tAccuracy: 0.957933\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 19 \tTraining Loss: 0.319168 \tValidation Loss: 0.187418 \tAccuracy: 0.955529\n","Validation loss decreased (0.190991 --> 0.187418).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 20 \tTraining Loss: 0.338207 \tValidation Loss: 0.184951 \tAccuracy: 0.961538\n","Validation loss decreased (0.187418 --> 0.184951).  Saving model ...\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 21 \tTraining Loss: 0.332663 \tValidation Loss: 0.194083 \tAccuracy: 0.956998\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 22 \tTraining Loss: 0.325305 \tValidation Loss: 0.193304 \tAccuracy: 0.956731\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 23 \tTraining Loss: 0.330844 \tValidation Loss: 0.191918 \tAccuracy: 0.955796\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 24 \tTraining Loss: 0.320968 \tValidation Loss: 0.190028 \tAccuracy: 0.957933\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 25 \tTraining Loss: 0.331062 \tValidation Loss: 0.192810 \tAccuracy: 0.957933\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 26 \tTraining Loss: 0.343175 \tValidation Loss: 0.200125 \tAccuracy: 0.953659\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 27 \tTraining Loss: 0.348460 \tValidation Loss: 0.193379 \tAccuracy: 0.952190\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 28 \tTraining Loss: 0.338287 \tValidation Loss: 0.199028 \tAccuracy: 0.955128\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 29 \tTraining Loss: 0.325869 \tValidation Loss: 0.197473 \tAccuracy: 0.954594\n","pos1\n","205\n","26\n","i 1\n","i 11\n","i 21\n","i 31\n","i 41\n","i 51\n","i 61\n","i 71\n","i 81\n","i 91\n","i 101\n","i 111\n","i 121\n","i 131\n","i 141\n","i 151\n","i 161\n","i 171\n","i 181\n","i 191\n","i 201\n","hwt\n","Epoch: 30 \tTraining Loss: 0.340189 \tValidation Loss: 0.214552 \tAccuracy: 0.954861\n"],"name":"stdout"}]}]}